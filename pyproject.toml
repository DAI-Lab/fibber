[project]
name = "fibber"
readme = "README.md"
description = "adversarial attacks on text classification"
dynamic = ["version"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
]
authors = [
    {name="MIT Data to AI Lab", email="dailabmit@mit.edu"}
]
maintainers = [
    {name="MIT Data to AI Lab", email="dailabmit@mit.edu"}
]
keywords = ["fibber", "data science", "machine learning"]
license = {text = "MIT License"}
requires-python = ">=3.6,<4"
dependencies = [
    'numpy>=1.18.0',
    "tensorflow-gpu>=2.0.0; sys_platform!='darwin' or platform_machine!='arm64'",
    "tensorflow-metal >= 0.4.0; sys_platform=='darwin' and platform_machine=='arm64'",
    "tensorflow-macos >= 2.8.0; sys_platform=='darwin' and platform_machine=='arm64'",
    'tensorflow-hub>=0.9.0',
    'torch<2,>=1.0',
    'torchvision<1,>=0.4.2',
    'transformers>=2.4.0',
    'tqdm>=4.0.0',
    'spacy>=2.0.0',
    'pandas>=1.0.0',
    'nltk>=3.0',
    'rake_nltk>=1.0.4',
    'stanza>=1.1.0',
    'sentence-transformers>=0.3.0',
    'rake_nltk>=1.0.4',
    'fasttext>=0.9.0',
    'expiringdict>=1.2.0'
]

[project.urls]
"Source Code"= "https://github.com/DAI-Lab/fibber"
"Issue Tracker" = "https://github.com/DAI-Lab/fibber/issues"
"Twitter" = "https://twitter.com/lab_dai"

[project.optional-dependencies]
test = [
    "pytest >= 3.4.2",
    "pytest-cov >= 2.5.1",
    "pytest-xdist",
    "pytest-runner >= 2.11.1",
]
dev = [
    "ruff",
    "black[jupyter]",
    "pre-commit == 2.20.0",
    "fibber[test]",
]
docs = [
    "m2r2>=0.2.5,<0.3",
    "nbsphinx>=0.5.0,<0.7",
    "Sphinx==3.2.1",
    "pydata-sphinx-theme",
    "autodocsumm>=0.1.10",
    "PyYaml>=5.3.1,<6",
    "argh>=0.26.2,<1",
    "sphinx_rtd_theme>=0.4,<1",
    "ipython>=7,<8",
]

[tool.setuptools]
include-package-data = true
license-files = [
    "LICENSE",
]

[tool.setuptools.packages.find]
namespaces = true

[tool.setuptools.package-data]
"*" = [
    "*.txt",
    "*.md",
    "*.rst",
    "README.md",
    "docs/*",
    "Makefile",
    "make.bat",
    "*.jpg",
    "*.png",
    "*.gif",
]

[tool.setuptools.exclude-package-data]
"*" = [
    "* __pycache__",
    "*.py[co]",
]

[tool.setuptools.dynamic]
version = {attr = "fibber.version.__version__"}

[tool.pytest.ini_options]
testpaths = [
    "tests/*"
]

[tool.black]
target-version = ['py311']

[tool.coverage.run]
source = ["fibber"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if self._verbose:",
    "if verbose:",
    "if profile:",
    "pytest.skip"
]

[build-system]
requires = [
    "setuptools >= 61.0.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Never enforce `E501` (line length violations), lines cannot be > 79 chars
ignore = ["E501"]
exclude = [
    "docs",
    "scripts",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # flake8-quotes
    "Q",
    # isort
    "I001"
]
src = ["fibber"]

[tool.ruff.isort]
known-first-party = ["fibber"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "E402", "F403", "F405", "E501", "I001"]